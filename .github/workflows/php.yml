name: Build

on:
  push:
    branches: ['master', 'main']
  pull_request:
    branches: ['master', 'main']

jobs:
  build:

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        operating-system: ['ubuntu-20.04']
        php-versions: ['8.0']
        phpunit-versions: ['9.5.4']
        coverage: [false]
        include:
        - php-versions: '5.3'
          phpunit-versions: '4.8.36'
        - php-versions: '5.4'
          phpunit-versions: '4.8.36'
        - php-versions: '5.5'
          phpunit-versions: '4.8.36'
        - php-versions: '5.6'
          phpunit-versions: '4.8.36'
        - php-versions: '7.0'
          phpunit-versions: '4.8.36'
        - php-versions: '7.1'
          phpunit-versions: '4.8.36'
        - php-versions: '7.2'
          phpunit-versions: '4.8.36'
        - php-versions: '7.3'
          phpunit-versions: '7.5.20'
        - php-versions: '7.4'
          phpunit-versions: '7.5.20'
#          coverage: true
        - php-versions: '8.1'
          phpunit-versions: '9.5.4'

    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        coverage: xdebug
        tools: phpunit:${{ matrix.phpunit-versions }}

    - uses: actions/checkout@v2

    - run: composer remove phpunit/phpunit --dev --no-update
    - run: composer remove php-coveralls/php-coveralls --dev --no-update
    - run: cat composer.json

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-versions }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-source --no-interaction --dev

    - name: Run tests
      run: prove --exec 'php' ./t/*.t
      if: ${{ !matrix.coverage }}

#    - name: Run tests
#      run: phpunit
#      if: ${{ !matrix.coverage }}

#    - name: Run tests with coverage
#      run: |
#       mkdir -p build/logs
#       phpunit --coverage-clover build/logs/clover.xml
#       ls -l build/logs/
#      if: ${{ matrix.coverage }}

#    - name: Upload coverage results to Coveralls
#      env:
#        COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      run: |
#        composer global require php-coveralls/php-coveralls
#        php-coveralls --coverage_clover=build/logs/clover.xml -v
#      if: ${{ matrix.coverage }}
